Type analysis for Point2D
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Point2D;Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Point2D;Value=ConcreteType:Point2D;Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Point2D;Value=ConcreteType:Point2D;Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Point2D;Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Point2D;Coordinate=ConcreteType:Point2D;Self=ConcreteType:Point2D;
  Concept=Difference Expr=Concept:Difference<ConcreteType:Vector2D> Subs=Difference=ConcreteType:Point2D;T=ConcreteType:Vector2D;Self=ConcreteType:Point2D;
    Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Point2D;T=TypeVariable:T;Difference=ConcreteType:Point2D;T=ConcreteType:Vector2D;Self=ConcreteType:Point2D;
  Function: Implicit(ConcreteType:Point2D x)
  Function: Deform(ConcreteType:Point2D x, ConcreteType:Function1<ConcreteType:Vector3D,ConcreteType:Vector3D> f)
  Function: ToVector(ConcreteType:Point2D a)
  Function: Add(ConcreteType:Point2D a, ConcreteType:Vector2D b)
  Function: Subtract(ConcreteType:Point2D a, ConcreteType:Vector2D b)
  Function: Subtract(ConcreteType:Point2D a, ConcreteType:Point2D b)
Type analysis for Transform2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Transform2D;Self=ConcreteType:Transform2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Transform2D;Value=ConcreteType:Transform2D;Self=ConcreteType:Transform2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Transform2D;Value=ConcreteType:Transform2D;Self=ConcreteType:Transform2D;
Type analysis for Pose2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Pose2D;Self=ConcreteType:Pose2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Pose2D;Value=ConcreteType:Pose2D;Self=ConcreteType:Pose2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Pose2D;Value=ConcreteType:Pose2D;Self=ConcreteType:Pose2D;
Type analysis for Bounds2D
  Concept=Interval Expr=Concept:Interval<ConcreteType:Point2D,ConcreteType:Vector2D> Subs=Interval=ConcreteType:Bounds2D;TSize=ConcreteType:Vector2D;TValue=ConcreteType:Point2D;Self=ConcreteType:Bounds2D;
  Function: Size(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Lerp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number amount)
  Function: Reverse(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Center(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Overlaps(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: SplitAt(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Split(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Left(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Right(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: MoveTo(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value v)
  Function: LeftHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: RightHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Recenter(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value c)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Bounds2D;Interval=ConcreteType:Bounds2D;TSize=ConcreteType:Vector2D;TValue=ConcreteType:Point2D;Self=ConcreteType:Bounds2D;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Bounds2D;Interval=ConcreteType:Bounds2D;TSize=ConcreteType:Vector2D;TValue=ConcreteType:Point2D;Self=ConcreteType:Bounds2D;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Bounds2D;Value=ConcreteType:Bounds2D;Interval=ConcreteType:Bounds2D;TSize=ConcreteType:Vector2D;TValue=ConcreteType:Point2D;Self=ConcreteType:Bounds2D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Bounds2D;Value=ConcreteType:Bounds2D;Interval=ConcreteType:Bounds2D;TSize=ConcreteType:Vector2D;TValue=ConcreteType:Point2D;Self=ConcreteType:Bounds2D;
Type analysis for Ray2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Ray2D;Self=ConcreteType:Ray2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Ray2D;Value=ConcreteType:Ray2D;Self=ConcreteType:Ray2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Ray2D;Value=ConcreteType:Ray2D;Self=ConcreteType:Ray2D;
Type analysis for Sphere
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Sphere;Self=ConcreteType:Sphere;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Sphere;Value=ConcreteType:Sphere;Self=ConcreteType:Sphere;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Sphere;Value=ConcreteType:Sphere;Self=ConcreteType:Sphere;
Type analysis for Plane
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Plane;Self=ConcreteType:Plane;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Plane;Value=ConcreteType:Plane;Self=ConcreteType:Plane;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Plane;Value=ConcreteType:Plane;Self=ConcreteType:Plane;
Type analysis for Triangle2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Triangle2D;Value=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Triangle2D;Value=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
  Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Triangle2D;Points2D=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Triangle2D;Geometry2D=ConcreteType:Triangle2D;Points2D=ConcreteType:Triangle2D;Self=ConcreteType:Triangle2D;
Type analysis for Quad2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Quad2D;Self=ConcreteType:Quad2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Quad2D;Value=ConcreteType:Quad2D;Self=ConcreteType:Quad2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quad2D;Value=ConcreteType:Quad2D;Self=ConcreteType:Quad2D;
  Concept=Array Expr=Concept:Array<ConcreteType:Point2D> Subs=Array=ConcreteType:Quad2D;T=ConcreteType:Point2D;Self=ConcreteType:Quad2D;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Line2D
  Concept=PolygonalChain2D Expr=Concept:PolygonalChain2D Subs=PolygonalChain2D=ConcreteType:Line2D;Self=ConcreteType:Line2D;
    Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:Line2D;PolygonalChain2D=ConcreteType:Line2D;Self=ConcreteType:Line2D;
      Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Line2D;Points2D=ConcreteType:Line2D;PolygonalChain2D=ConcreteType:Line2D;Self=ConcreteType:Line2D;
        Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Line2D;Geometry2D=ConcreteType:Line2D;Points2D=ConcreteType:Line2D;PolygonalChain2D=ConcreteType:Line2D;Self=ConcreteType:Line2D;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Line2D;PolygonalChain2D=ConcreteType:Line2D;Self=ConcreteType:Line2D;
  Concept=Array Expr=Concept:Array<ConcreteType:Point2D> Subs=Array=ConcreteType:Line2D;T=ConcreteType:Point2D;Self=ConcreteType:Line2D;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
  Function: Closed(ConcreteType:Line2D x)
Type analysis for Circle
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Circle;Self=ConcreteType:Circle;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Circle;ClosedShape2D=ConcreteType:Circle;Self=ConcreteType:Circle;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Circle;Geometry2D=ConcreteType:Circle;ClosedShape2D=ConcreteType:Circle;Self=ConcreteType:Circle;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Circle;ClosedShape2D=ConcreteType:Circle;Self=ConcreteType:Circle;
Type analysis for Lens
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Lens;Self=ConcreteType:Lens;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Lens;ClosedShape2D=ConcreteType:Lens;Self=ConcreteType:Lens;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Lens;Geometry2D=ConcreteType:Lens;ClosedShape2D=ConcreteType:Lens;Self=ConcreteType:Lens;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Lens;ClosedShape2D=ConcreteType:Lens;Self=ConcreteType:Lens;
Type analysis for PolygonFace
Type analysis for Rectangle
  Concept=Polygon2D Expr=Concept:Polygon2D Subs=Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
  Function: Closed(Concept:Polygon2D x)
    Concept=PolygonalChain2D Expr=Concept:PolygonalChain2D Subs=PolygonalChain2D=ConcreteType:Rectangle;Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
      Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:Rectangle;PolygonalChain2D=ConcreteType:Rectangle;Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
        Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Rectangle;Points2D=ConcreteType:Rectangle;PolygonalChain2D=ConcreteType:Rectangle;Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
          Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Rectangle;Geometry2D=ConcreteType:Rectangle;Points2D=ConcreteType:Rectangle;PolygonalChain2D=ConcreteType:Rectangle;Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
      Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Rectangle;PolygonalChain2D=ConcreteType:Rectangle;Polygon2D=ConcreteType:Rectangle;Self=ConcreteType:Rectangle;
Type analysis for Ring
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Ring;Self=ConcreteType:Ring;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Ring;ClosedShape2D=ConcreteType:Ring;Self=ConcreteType:Ring;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Ring;Geometry2D=ConcreteType:Ring;ClosedShape2D=ConcreteType:Ring;Self=ConcreteType:Ring;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Ring;ClosedShape2D=ConcreteType:Ring;Self=ConcreteType:Ring;
Type analysis for Arc
  Concept=OpenShape2D Expr=Concept:OpenShape2D Subs=OpenShape2D=ConcreteType:Arc;Self=ConcreteType:Arc;
  Function: Closed(Concept:OpenShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Arc;OpenShape2D=ConcreteType:Arc;Self=ConcreteType:Arc;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Arc;Geometry2D=ConcreteType:Arc;OpenShape2D=ConcreteType:Arc;Self=ConcreteType:Arc;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Arc;OpenShape2D=ConcreteType:Arc;Self=ConcreteType:Arc;
Type analysis for Sector
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Sector;Self=ConcreteType:Sector;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Sector;ClosedShape2D=ConcreteType:Sector;Self=ConcreteType:Sector;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Sector;Geometry2D=ConcreteType:Sector;ClosedShape2D=ConcreteType:Sector;Self=ConcreteType:Sector;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Sector;ClosedShape2D=ConcreteType:Sector;Self=ConcreteType:Sector;
Type analysis for Chord
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Chord;Self=ConcreteType:Chord;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Chord;ClosedShape2D=ConcreteType:Chord;Self=ConcreteType:Chord;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Chord;Geometry2D=ConcreteType:Chord;ClosedShape2D=ConcreteType:Chord;Self=ConcreteType:Chord;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Chord;ClosedShape2D=ConcreteType:Chord;Self=ConcreteType:Chord;
Type analysis for Segment
  Concept=ClosedShape2D Expr=Concept:ClosedShape2D Subs=ClosedShape2D=ConcreteType:Segment;Self=ConcreteType:Segment;
  Function: Closed(Concept:ClosedShape2D x)
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Segment;ClosedShape2D=ConcreteType:Segment;Self=ConcreteType:Segment;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Segment;Geometry2D=ConcreteType:Segment;ClosedShape2D=ConcreteType:Segment;Self=ConcreteType:Segment;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Segment;ClosedShape2D=ConcreteType:Segment;Self=ConcreteType:Segment;
Type analysis for RegularPolygon
  Concept=Polygon2D Expr=Concept:Polygon2D Subs=Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
  Function: Closed(Concept:Polygon2D x)
    Concept=PolygonalChain2D Expr=Concept:PolygonalChain2D Subs=PolygonalChain2D=ConcreteType:RegularPolygon;Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
      Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:RegularPolygon;PolygonalChain2D=ConcreteType:RegularPolygon;Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
        Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:RegularPolygon;Points2D=ConcreteType:RegularPolygon;PolygonalChain2D=ConcreteType:RegularPolygon;Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
          Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:RegularPolygon;Geometry2D=ConcreteType:RegularPolygon;Points2D=ConcreteType:RegularPolygon;PolygonalChain2D=ConcreteType:RegularPolygon;Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
      Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:RegularPolygon;PolygonalChain2D=ConcreteType:RegularPolygon;Polygon2D=ConcreteType:RegularPolygon;Self=ConcreteType:RegularPolygon;
  Function: Points(ConcreteType:RegularPolygon x)
Type analysis for Box2D
  Concept=Shape2D Expr=Concept:Shape2D Subs=Shape2D=ConcreteType:Box2D;Self=ConcreteType:Box2D;
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Box2D;Shape2D=ConcreteType:Box2D;Self=ConcreteType:Box2D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Box2D;Geometry2D=ConcreteType:Box2D;Shape2D=ConcreteType:Box2D;Self=ConcreteType:Box2D;
Type analysis for Deformed2D
  Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:Deformed2D;Self=ConcreteType:Deformed2D;
    Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Deformed2D;Geometry2D=ConcreteType:Deformed2D;Self=ConcreteType:Deformed2D;
Type analysis for Point3D
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Point3D;Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Point3D;Value=ConcreteType:Point3D;Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Point3D;Value=ConcreteType:Point3D;Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Point3D;Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Point3D;Coordinate=ConcreteType:Point3D;Self=ConcreteType:Point3D;
  Concept=Difference Expr=Concept:Difference<ConcreteType:Vector3D> Subs=Difference=ConcreteType:Point3D;T=ConcreteType:Vector3D;Self=ConcreteType:Point3D;
    Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Point3D;T=TypeVariable:T;Difference=ConcreteType:Point3D;T=ConcreteType:Vector3D;Self=ConcreteType:Point3D;
  Function: Implicit(ConcreteType:Point3D x)
  Function: Deform(ConcreteType:Point3D x, ConcreteType:Function1<ConcreteType:Vector3D,ConcreteType:Vector3D> f)
  Function: ToVector(ConcreteType:Point3D a)
  Function: Add(ConcreteType:Point3D a, ConcreteType:Vector3D b)
  Function: Subtract(ConcreteType:Point3D a, ConcreteType:Vector3D b)
  Function: Subtract(ConcreteType:Point3D a, ConcreteType:Point3D b)
Type analysis for Transform3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Transform3D;Self=ConcreteType:Transform3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Transform3D;Value=ConcreteType:Transform3D;Self=ConcreteType:Transform3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Transform3D;Value=ConcreteType:Transform3D;Self=ConcreteType:Transform3D;
Type analysis for Pose3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Pose3D;Self=ConcreteType:Pose3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Pose3D;Value=ConcreteType:Pose3D;Self=ConcreteType:Pose3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Pose3D;Value=ConcreteType:Pose3D;Self=ConcreteType:Pose3D;
Type analysis for Frame3D
Type analysis for Bounds3D
  Concept=Interval Expr=Concept:Interval<ConcreteType:Point3D,ConcreteType:Vector3D> Subs=Interval=ConcreteType:Bounds3D;TSize=ConcreteType:Vector3D;TValue=ConcreteType:Point3D;Self=ConcreteType:Bounds3D;
  Function: Size(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Lerp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number amount)
  Function: Reverse(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Center(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Overlaps(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: SplitAt(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Split(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Left(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Right(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: MoveTo(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value v)
  Function: LeftHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: RightHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Recenter(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value c)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Bounds3D;Interval=ConcreteType:Bounds3D;TSize=ConcreteType:Vector3D;TValue=ConcreteType:Point3D;Self=ConcreteType:Bounds3D;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Bounds3D;Interval=ConcreteType:Bounds3D;TSize=ConcreteType:Vector3D;TValue=ConcreteType:Point3D;Self=ConcreteType:Bounds3D;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Bounds3D;Value=ConcreteType:Bounds3D;Interval=ConcreteType:Bounds3D;TSize=ConcreteType:Vector3D;TValue=ConcreteType:Point3D;Self=ConcreteType:Bounds3D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Bounds3D;Value=ConcreteType:Bounds3D;Interval=ConcreteType:Bounds3D;TSize=ConcreteType:Vector3D;TValue=ConcreteType:Point3D;Self=ConcreteType:Bounds3D;
Type analysis for Line3D
  Concept=PolygonalChain3D Expr=Concept:PolygonalChain3D Subs=PolygonalChain3D=ConcreteType:Line3D;Self=ConcreteType:Line3D;
    Concept=Points3D Expr=Concept:Points3D Subs=Points3D=ConcreteType:Line3D;PolygonalChain3D=ConcreteType:Line3D;Self=ConcreteType:Line3D;
      Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Line3D;Points3D=ConcreteType:Line3D;PolygonalChain3D=ConcreteType:Line3D;Self=ConcreteType:Line3D;
        Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Line3D;Geometry3D=ConcreteType:Line3D;Points3D=ConcreteType:Line3D;PolygonalChain3D=ConcreteType:Line3D;Self=ConcreteType:Line3D;
    Concept=OpenClosedShape Expr=Concept:OpenClosedShape Subs=OpenClosedShape=ConcreteType:Line3D;PolygonalChain3D=ConcreteType:Line3D;Self=ConcreteType:Line3D;
  Function: Closed(ConcreteType:Line3D x)
Type analysis for Ray3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Ray3D;Self=ConcreteType:Ray3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Ray3D;Value=ConcreteType:Ray3D;Self=ConcreteType:Ray3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Ray3D;Value=ConcreteType:Ray3D;Self=ConcreteType:Ray3D;
Type analysis for Triangle3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Triangle3D;Self=ConcreteType:Triangle3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Triangle3D;Value=ConcreteType:Triangle3D;Self=ConcreteType:Triangle3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Triangle3D;Value=ConcreteType:Triangle3D;Self=ConcreteType:Triangle3D;
  Concept=Array Expr=Concept:Array<ConcreteType:Point2D> Subs=Array=ConcreteType:Triangle3D;T=ConcreteType:Point2D;Self=ConcreteType:Triangle3D;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Quad3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Quad3D;Self=ConcreteType:Quad3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Quad3D;Value=ConcreteType:Quad3D;Self=ConcreteType:Quad3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quad3D;Value=ConcreteType:Quad3D;Self=ConcreteType:Quad3D;
  Concept=Array Expr=Concept:Array<ConcreteType:Point3D> Subs=Array=ConcreteType:Quad3D;T=ConcreteType:Point3D;Self=ConcreteType:Quad3D;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Capsule
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:Capsule;Self=ConcreteType:Capsule;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Capsule;Shape3D=ConcreteType:Capsule;Self=ConcreteType:Capsule;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Capsule;Geometry3D=ConcreteType:Capsule;Shape3D=ConcreteType:Capsule;Self=ConcreteType:Capsule;
Type analysis for Cylinder
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:Cylinder;Self=ConcreteType:Cylinder;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Cylinder;Shape3D=ConcreteType:Cylinder;Self=ConcreteType:Cylinder;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Cylinder;Geometry3D=ConcreteType:Cylinder;Shape3D=ConcreteType:Cylinder;Self=ConcreteType:Cylinder;
Type analysis for Cone
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:Cone;Self=ConcreteType:Cone;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Cone;Shape3D=ConcreteType:Cone;Self=ConcreteType:Cone;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Cone;Geometry3D=ConcreteType:Cone;Shape3D=ConcreteType:Cone;Self=ConcreteType:Cone;
Type analysis for Tube
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:Tube;Self=ConcreteType:Tube;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Tube;Shape3D=ConcreteType:Tube;Self=ConcreteType:Tube;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Tube;Geometry3D=ConcreteType:Tube;Shape3D=ConcreteType:Tube;Self=ConcreteType:Tube;
Type analysis for ConeSegment
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:ConeSegment;Self=ConcreteType:ConeSegment;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:ConeSegment;Shape3D=ConcreteType:ConeSegment;Self=ConcreteType:ConeSegment;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:ConeSegment;Geometry3D=ConcreteType:ConeSegment;Shape3D=ConcreteType:ConeSegment;Self=ConcreteType:ConeSegment;
Type analysis for Box3D
  Concept=Shape3D Expr=Concept:Shape3D Subs=Shape3D=ConcreteType:Box3D;Self=ConcreteType:Box3D;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:Box3D;Shape3D=ConcreteType:Box3D;Self=ConcreteType:Box3D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:Box3D;Geometry3D=ConcreteType:Box3D;Shape3D=ConcreteType:Box3D;Self=ConcreteType:Box3D;
Type analysis for CubicBezier2D
  Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:CubicBezier2D;Self=ConcreteType:CubicBezier2D;
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:CubicBezier2D;Points2D=ConcreteType:CubicBezier2D;Self=ConcreteType:CubicBezier2D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:CubicBezier2D;Geometry2D=ConcreteType:CubicBezier2D;Points2D=ConcreteType:CubicBezier2D;Self=ConcreteType:CubicBezier2D;
Type analysis for CubicBezier3D
  Concept=Points3D Expr=Concept:Points3D Subs=Points3D=ConcreteType:CubicBezier3D;Self=ConcreteType:CubicBezier3D;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:CubicBezier3D;Points3D=ConcreteType:CubicBezier3D;Self=ConcreteType:CubicBezier3D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:CubicBezier3D;Geometry3D=ConcreteType:CubicBezier3D;Points3D=ConcreteType:CubicBezier3D;Self=ConcreteType:CubicBezier3D;
Type analysis for QuadraticBezier2D
  Concept=Points2D Expr=Concept:Points2D Subs=Points2D=ConcreteType:QuadraticBezier2D;Self=ConcreteType:QuadraticBezier2D;
    Concept=Geometry2D Expr=Concept:Geometry2D Subs=Geometry2D=ConcreteType:QuadraticBezier2D;Points2D=ConcreteType:QuadraticBezier2D;Self=ConcreteType:QuadraticBezier2D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:QuadraticBezier2D;Geometry2D=ConcreteType:QuadraticBezier2D;Points2D=ConcreteType:QuadraticBezier2D;Self=ConcreteType:QuadraticBezier2D;
Type analysis for QuadraticBezier3D
  Concept=Points3D Expr=Concept:Points3D Subs=Points3D=ConcreteType:QuadraticBezier3D;Self=ConcreteType:QuadraticBezier3D;
    Concept=Geometry3D Expr=Concept:Geometry3D Subs=Geometry3D=ConcreteType:QuadraticBezier3D;Points3D=ConcreteType:QuadraticBezier3D;Self=ConcreteType:QuadraticBezier3D;
      Concept=Geometry Expr=Concept:Geometry Subs=Geometry=ConcreteType:QuadraticBezier3D;Geometry3D=ConcreteType:QuadraticBezier3D;Points3D=ConcreteType:QuadraticBezier3D;Self=ConcreteType:QuadraticBezier3D;
Type analysis for Quaternion
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Quaternion;T=ConcreteType:Number;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Quaternion;Value=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quaternion;Value=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Quaternion;Numerical=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Quaternion;T=TypeVariable:Self;Arithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Quaternion;T=TypeVariable:Self;Arithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Quaternion;Arithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Quaternion;Arithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Quaternion;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Quaternion;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Quaternion;ScalarArithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Quaternion;ScalarArithmetic=ConcreteType:Quaternion;Vector=ConcreteType:Quaternion;Self=ConcreteType:Quaternion;
Type analysis for AxisAngle
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:AxisAngle;Self=ConcreteType:AxisAngle;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:AxisAngle;Value=ConcreteType:AxisAngle;Self=ConcreteType:AxisAngle;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:AxisAngle;Value=ConcreteType:AxisAngle;Self=ConcreteType:AxisAngle;
Type analysis for EulerAngles
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:EulerAngles;Self=ConcreteType:EulerAngles;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:EulerAngles;Value=ConcreteType:EulerAngles;Self=ConcreteType:EulerAngles;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:EulerAngles;Value=ConcreteType:EulerAngles;Self=ConcreteType:EulerAngles;
Type analysis for Rotation3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Rotation3D;Self=ConcreteType:Rotation3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Rotation3D;Value=ConcreteType:Rotation3D;Self=ConcreteType:Rotation3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Rotation3D;Value=ConcreteType:Rotation3D;Self=ConcreteType:Rotation3D;
Type analysis for Orientation3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Orientation3D;Self=ConcreteType:Orientation3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Orientation3D;Value=ConcreteType:Orientation3D;Self=ConcreteType:Orientation3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Orientation3D;Value=ConcreteType:Orientation3D;Self=ConcreteType:Orientation3D;
Type analysis for Point4D
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Point4D;Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Point4D;Value=ConcreteType:Point4D;Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Point4D;Value=ConcreteType:Point4D;Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Point4D;Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Point4D;Coordinate=ConcreteType:Point4D;Self=ConcreteType:Point4D;
  Concept=Difference Expr=Concept:Difference<ConcreteType:Vector4D> Subs=Difference=ConcreteType:Point4D;T=ConcreteType:Vector4D;Self=ConcreteType:Point4D;
    Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Point4D;T=TypeVariable:T;Difference=ConcreteType:Point4D;T=ConcreteType:Vector4D;Self=ConcreteType:Point4D;
  Function: Implicit(ConcreteType:Point4D x)
  Function: ToVector(ConcreteType:Point4D a)
  Function: Add(ConcreteType:Point4D a, ConcreteType:Vector4D b)
  Function: Subtract(ConcreteType:Point4D a, ConcreteType:Vector4D b)
  Function: Subtract(ConcreteType:Point4D a, ConcreteType:Point4D b)
Type analysis for Line4D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Line4D;Self=ConcreteType:Line4D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Line4D;Value=ConcreteType:Line4D;Self=ConcreteType:Line4D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Line4D;Value=ConcreteType:Line4D;Self=ConcreteType:Line4D;
Type analysis for Quadray
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Quadray;T=ConcreteType:Number;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Quadray;Value=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quadray;Value=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Quadray;Numerical=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Quadray;T=TypeVariable:Self;Arithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Quadray;T=TypeVariable:Self;Arithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Quadray;Arithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Quadray;Arithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Quadray;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Quadray;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Quadray;ScalarArithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Quadray;ScalarArithmetic=ConcreteType:Quadray;Vector=ConcreteType:Quadray;Self=ConcreteType:Quadray;
Type analysis for Number
  Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Number;Self=ConcreteType:Number;
  Function: Magnitude(Concept:Real x)
  Function: ClampOne(Concept:Real x)
  Function: GtZ(Concept:Real x)
  Function: LtZ(Concept:Real x)
  Function: GtEqZ(Concept:Real x)
  Function: LtEqZ(Concept:Real x)
  Function: IsPositive(Concept:Real x)
  Function: IsNegative(Concept:Real x)
  Function: Sign(Concept:Real x)
  Function: Abs(Concept:Real x)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Number;Value=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Number;Value=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Number;Numerical=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Number;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Number;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Number;ScalarArithmetic=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Number;ScalarArithmetic=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Number;T=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Number;T=TypeVariable:T;Difference=ConcreteType:Number;T=ConcreteType:Number;Real=ConcreteType:Number;Self=ConcreteType:Number;
  Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Number;Self=ConcreteType:Number;
  Function: PlusOne(Concept:Numerical x)
  Function: MinusOne(Concept:Numerical x)
  Function: FromOne(Concept:Numerical x)
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Number;Value=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Number;Value=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Number;Numerical=ConcreteType:Number;Self=ConcreteType:Number;
  Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Number;Self=ConcreteType:Number;
  Function: Pow2(Concept:Arithmetic x)
  Function: Pow3(Concept:Arithmetic x)
  Function: Pow4(Concept:Arithmetic x)
  Function: Pow5(Concept:Arithmetic x)
  Function: Square(Concept:Arithmetic x)
    Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Number;T=TypeVariable:Self;Arithmetic=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Number;T=TypeVariable:Self;Arithmetic=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Number;Arithmetic=ConcreteType:Number;Self=ConcreteType:Number;
    Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Number;Arithmetic=ConcreteType:Number;Self=ConcreteType:Number;
  Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Number;Self=ConcreteType:Number;
  Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
  Function: Equals(Concept:Comparable a, Concept:Comparable b)
  Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
  Function: LessThan(Concept:Comparable a, Concept:Comparable b)
  Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
  Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
  Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
  Function: Lesser(Concept:Comparable a, Concept:Comparable b)
  Function: Greater(Concept:Comparable a, Concept:Comparable b)
  Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
  Function: Turns(ConcreteType:Number x)
  Function: Acos(ConcreteType:Number x)
  Function: Asin(ConcreteType:Number x)
  Function: Atan(ConcreteType:Number x)
  Function: Pow(ConcreteType:Number x, ConcreteType:Number y)
  Function: Log(ConcreteType:Number x, ConcreteType:Number y)
  Function: Ln(ConcreteType:Number x)
  Function: Exp(ConcreteType:Number x)
  Function: Add(ConcreteType:Number x, ConcreteType:Number y)
  Function: Subtract(ConcreteType:Number x, ConcreteType:Number y)
  Function: Divide(ConcreteType:Number x, ConcreteType:Number y)
  Function: Multiply(ConcreteType:Number x, ConcreteType:Number y)
  Function: Modulo(ConcreteType:Number x, ConcreteType:Number y)
  Function: Negative(ConcreteType:Number x)
  Function: Hundred(ConcreteType:Number x)
  Function: Thousand(ConcreteType:Number x)
  Function: Million(ConcreteType:Number x)
  Function: Billion(ConcreteType:Number x)
  Function: OunceToGram(ConcreteType:Number x)
  Function: TroyOunceToGram(ConcreteType:Number x)
  Function: GrainToMilligram(ConcreteType:Number x)
  Function: Mole(ConcreteType:Number x)
  Function: Inverse(ConcreteType:Number x)
  Function: Reciprocal(ConcreteType:Number x)
  Function: SquareRoot(ConcreteType:Number x)
  Function: Sqrt(ConcreteType:Number x)
  Function: SmoothStep(ConcreteType:Number x)
  Function: MultiplyEpsilon(ConcreteType:Number x, ConcreteType:Number y)
  Function: AlmostEqual(ConcreteType:Number x, ConcreteType:Number y)
  Function: AlmostZero(ConcreteType:Number x)
  Function: AlmostZeroOrOne(ConcreteType:Number x)
  Function: InverseLerp(ConcreteType:Number a, ConcreteType:Number b, ConcreteType:Number v)
  Function: Remap(ConcreteType:Number aIn, ConcreteType:Number bIn, ConcreteType:Number aOut, ConcreteType:Number bOut, ConcreteType:Number v)
Type analysis for Integer
  Concept=WholeNumber Expr=Concept:WholeNumber Subs=WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Integer;Value=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Integer;Value=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Integer;Numerical=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Integer;T=TypeVariable:Self;Arithmetic=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Integer;T=TypeVariable:Self;Arithmetic=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Integer;Arithmetic=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Integer;Arithmetic=ConcreteType:Integer;WholeNumber=ConcreteType:Integer;Self=ConcreteType:Integer;
  Function: FloatDivision(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Fractions(ConcreteType:Integer x)
  Function: CirclePoints(ConcreteType:Integer n)
  Function: Add(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Subtract(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Divide(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Multiply(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Modulo(ConcreteType:Integer x, ConcreteType:Integer y)
  Function: Negative(ConcreteType:Integer x)
  Function: ToNumber(ConcreteType:Integer x)
  Function: Range(ConcreteType:Integer x)
Type analysis for String
  Concept=Array Expr=Concept:Array<ConcreteType:Character> Subs=Array=ConcreteType:String;T=ConcreteType:Character;Self=ConcreteType:String;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
  Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:String;Self=ConcreteType:String;
  Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
  Function: Equals(Concept:Comparable a, Concept:Comparable b)
  Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
  Function: LessThan(Concept:Comparable a, Concept:Comparable b)
  Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
  Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
  Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
  Function: Lesser(Concept:Comparable a, Concept:Comparable b)
  Function: Greater(Concept:Comparable a, Concept:Comparable b)
  Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
  Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:String;Self=ConcreteType:String;
Type analysis for Boolean
  Concept=BooleanOperations Expr=Concept:BooleanOperations Subs=BooleanOperations=ConcreteType:Boolean;Self=ConcreteType:Boolean;
  Function: And(ConcreteType:Boolean x, ConcreteType:Boolean y)
  Function: Or(ConcreteType:Boolean x, ConcreteType:Boolean y)
  Function: Not(ConcreteType:Boolean x)
Type analysis for Character
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Character;Self=ConcreteType:Character;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Character;Value=ConcreteType:Character;Self=ConcreteType:Character;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Character;Value=ConcreteType:Character;Self=ConcreteType:Character;
Type analysis for Dynamic
Type analysis for Type
Type analysis for Error
Type analysis for Tuple2
Type analysis for Tuple3
Type analysis for Tuple4
Type analysis for Tuple5
Type analysis for Tuple6
Type analysis for Tuple7
Type analysis for Tuple8
Type analysis for Tuple9
Type analysis for Tuple10
Type analysis for Function0
Type analysis for Function1
Type analysis for Function2
Type analysis for Function3
Type analysis for Function4
Type analysis for Function5
Type analysis for Function6
Type analysis for Function7
Type analysis for Function8
Type analysis for Function9
Type analysis for Function10
Type analysis for Count
  Concept=WholeNumber Expr=Concept:WholeNumber Subs=WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Count;Value=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Count;Value=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Count;Numerical=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Count;T=TypeVariable:Self;Arithmetic=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Count;T=TypeVariable:Self;Arithmetic=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Count;Arithmetic=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Count;Arithmetic=ConcreteType:Count;WholeNumber=ConcreteType:Count;Self=ConcreteType:Count;
Type analysis for Cardinal
  Concept=WholeNumber Expr=Concept:WholeNumber Subs=WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Cardinal;Value=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Cardinal;Value=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Cardinal;Numerical=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Cardinal;T=TypeVariable:Self;Arithmetic=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Cardinal;T=TypeVariable:Self;Arithmetic=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Cardinal;Arithmetic=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Cardinal;Arithmetic=ConcreteType:Cardinal;WholeNumber=ConcreteType:Cardinal;Self=ConcreteType:Cardinal;
Type analysis for Index
  Concept=WholeNumber Expr=Concept:WholeNumber Subs=WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Index;Value=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Index;Value=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Index;Numerical=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Index;T=TypeVariable:Self;Arithmetic=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Index;T=TypeVariable:Self;Arithmetic=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Index;Arithmetic=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Index;Arithmetic=ConcreteType:Index;WholeNumber=ConcreteType:Index;Self=ConcreteType:Index;
Type analysis for Unit
  Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Unit;Self=ConcreteType:Unit;
  Function: Magnitude(Concept:Real x)
  Function: ClampOne(Concept:Real x)
  Function: GtZ(Concept:Real x)
  Function: LtZ(Concept:Real x)
  Function: GtEqZ(Concept:Real x)
  Function: LtEqZ(Concept:Real x)
  Function: IsPositive(Concept:Real x)
  Function: IsNegative(Concept:Real x)
  Function: Sign(Concept:Real x)
  Function: Abs(Concept:Real x)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Unit;Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Unit;Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Unit;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Unit;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Unit;ScalarArithmetic=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Unit;ScalarArithmetic=ConcreteType:Unit;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Unit;T=ConcreteType:Number;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Unit;T=TypeVariable:T;Difference=ConcreteType:Unit;T=ConcreteType:Number;Real=ConcreteType:Unit;Self=ConcreteType:Unit;
  Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
  Function: PlusOne(Concept:Numerical x)
  Function: MinusOne(Concept:Numerical x)
  Function: FromOne(Concept:Numerical x)
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Unit;Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Unit;Value=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Unit;Numerical=ConcreteType:Unit;Self=ConcreteType:Unit;
Type analysis for Probability
  Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Probability;Self=ConcreteType:Probability;
  Function: Magnitude(Concept:Real x)
  Function: ClampOne(Concept:Real x)
  Function: GtZ(Concept:Real x)
  Function: LtZ(Concept:Real x)
  Function: GtEqZ(Concept:Real x)
  Function: LtEqZ(Concept:Real x)
  Function: IsPositive(Concept:Real x)
  Function: IsNegative(Concept:Real x)
  Function: Sign(Concept:Real x)
  Function: Abs(Concept:Real x)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Probability;Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Probability;Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
    Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
    Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
    Function: Equals(Concept:Comparable a, Concept:Comparable b)
    Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
    Function: LessThan(Concept:Comparable a, Concept:Comparable b)
    Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
    Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
    Function: Lesser(Concept:Comparable a, Concept:Comparable b)
    Function: Greater(Concept:Comparable a, Concept:Comparable b)
    Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Probability;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Probability;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Probability;ScalarArithmetic=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Probability;ScalarArithmetic=ConcreteType:Probability;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Probability;T=ConcreteType:Number;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Probability;T=TypeVariable:T;Difference=ConcreteType:Probability;T=ConcreteType:Number;Real=ConcreteType:Probability;Self=ConcreteType:Probability;
  Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
  Function: PlusOne(Concept:Numerical x)
  Function: MinusOne(Concept:Numerical x)
  Function: FromOne(Concept:Numerical x)
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Probability;Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Probability;Value=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Probability;Numerical=ConcreteType:Probability;Self=ConcreteType:Probability;
Type analysis for Complex
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Complex;T=ConcreteType:Number;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Complex;Value=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Complex;Value=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Complex;Numerical=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Complex;T=TypeVariable:Self;Arithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Complex;T=TypeVariable:Self;Arithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Complex;Arithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Complex;Arithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Complex;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Complex;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Complex;ScalarArithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Complex;ScalarArithmetic=ConcreteType:Complex;Vector=ConcreteType:Complex;Self=ConcreteType:Complex;
  Function: Count(ConcreteType:Complex c)
  Function: At(ConcreteType:Complex c, ConcreteType:Integer n)
Type analysis for Integer2
  Concept=Array Expr=Concept:Array<ConcreteType:Integer> Subs=Array=ConcreteType:Integer2;T=ConcreteType:Integer;Self=ConcreteType:Integer2;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Integer3
  Concept=Array Expr=Concept:Array<ConcreteType:Integer> Subs=Array=ConcreteType:Integer3;T=ConcreteType:Integer;Self=ConcreteType:Integer3;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Integer4
  Concept=Array Expr=Concept:Array<ConcreteType:Integer> Subs=Array=ConcreteType:Integer4;T=ConcreteType:Integer;Self=ConcreteType:Integer4;
  Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
  Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
Type analysis for Color
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Color;Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Color;Value=ConcreteType:Color;Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Color;Value=ConcreteType:Color;Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Color;Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Color;Coordinate=ConcreteType:Color;Self=ConcreteType:Color;
Type analysis for ColorLUV
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorLUV;Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorLUV;Value=ConcreteType:ColorLUV;Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorLUV;Value=ConcreteType:ColorLUV;Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorLUV;Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorLUV;Coordinate=ConcreteType:ColorLUV;Self=ConcreteType:ColorLUV;
Type analysis for ColorLAB
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorLAB;Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorLAB;Value=ConcreteType:ColorLAB;Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorLAB;Value=ConcreteType:ColorLAB;Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorLAB;Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorLAB;Coordinate=ConcreteType:ColorLAB;Self=ConcreteType:ColorLAB;
Type analysis for ColorLCh
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorLCh;Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorLCh;Value=ConcreteType:ColorLCh;Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorLCh;Value=ConcreteType:ColorLCh;Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorLCh;Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorLCh;Coordinate=ConcreteType:ColorLCh;Self=ConcreteType:ColorLCh;
Type analysis for ColorHSV
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorHSV;Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorHSV;Value=ConcreteType:ColorHSV;Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorHSV;Value=ConcreteType:ColorHSV;Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorHSV;Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorHSV;Coordinate=ConcreteType:ColorHSV;Self=ConcreteType:ColorHSV;
Type analysis for ColorHSL
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorHSL;Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorHSL;Value=ConcreteType:ColorHSL;Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorHSL;Value=ConcreteType:ColorHSL;Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorHSL;Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorHSL;Coordinate=ConcreteType:ColorHSL;Self=ConcreteType:ColorHSL;
Type analysis for ColorYCbCr
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:ColorYCbCr;Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:ColorYCbCr;Value=ConcreteType:ColorYCbCr;Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:ColorYCbCr;Value=ConcreteType:ColorYCbCr;Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:ColorYCbCr;Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:ColorYCbCr;Coordinate=ConcreteType:ColorYCbCr;Self=ConcreteType:ColorYCbCr;
Type analysis for SphericalCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:SphericalCoordinate;Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:SphericalCoordinate;Value=ConcreteType:SphericalCoordinate;Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:SphericalCoordinate;Value=ConcreteType:SphericalCoordinate;Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:SphericalCoordinate;Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:SphericalCoordinate;Coordinate=ConcreteType:SphericalCoordinate;Self=ConcreteType:SphericalCoordinate;
Type analysis for PolarCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:PolarCoordinate;Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:PolarCoordinate;Value=ConcreteType:PolarCoordinate;Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:PolarCoordinate;Value=ConcreteType:PolarCoordinate;Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:PolarCoordinate;Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:PolarCoordinate;Coordinate=ConcreteType:PolarCoordinate;Self=ConcreteType:PolarCoordinate;
Type analysis for LogPolarCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:LogPolarCoordinate;Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:LogPolarCoordinate;Value=ConcreteType:LogPolarCoordinate;Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:LogPolarCoordinate;Value=ConcreteType:LogPolarCoordinate;Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:LogPolarCoordinate;Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:LogPolarCoordinate;Coordinate=ConcreteType:LogPolarCoordinate;Self=ConcreteType:LogPolarCoordinate;
Type analysis for CylindricalCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:CylindricalCoordinate;Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:CylindricalCoordinate;Value=ConcreteType:CylindricalCoordinate;Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:CylindricalCoordinate;Value=ConcreteType:CylindricalCoordinate;Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:CylindricalCoordinate;Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:CylindricalCoordinate;Coordinate=ConcreteType:CylindricalCoordinate;Self=ConcreteType:CylindricalCoordinate;
Type analysis for HorizontalCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:HorizontalCoordinate;Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:HorizontalCoordinate;Value=ConcreteType:HorizontalCoordinate;Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:HorizontalCoordinate;Value=ConcreteType:HorizontalCoordinate;Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:HorizontalCoordinate;Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:HorizontalCoordinate;Coordinate=ConcreteType:HorizontalCoordinate;Self=ConcreteType:HorizontalCoordinate;
Type analysis for GeoCoordinate
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:GeoCoordinate;Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:GeoCoordinate;Value=ConcreteType:GeoCoordinate;Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:GeoCoordinate;Value=ConcreteType:GeoCoordinate;Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:GeoCoordinate;Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:GeoCoordinate;Coordinate=ConcreteType:GeoCoordinate;Self=ConcreteType:GeoCoordinate;
Type analysis for GeoCoordinateWithAltitude
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:GeoCoordinateWithAltitude;Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:GeoCoordinateWithAltitude;Value=ConcreteType:GeoCoordinateWithAltitude;Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:GeoCoordinateWithAltitude;Value=ConcreteType:GeoCoordinateWithAltitude;Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:GeoCoordinateWithAltitude;Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:GeoCoordinateWithAltitude;Coordinate=ConcreteType:GeoCoordinateWithAltitude;Self=ConcreteType:GeoCoordinateWithAltitude;
Type analysis for Size2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Size2D;Self=ConcreteType:Size2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Size2D;Value=ConcreteType:Size2D;Self=ConcreteType:Size2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Size2D;Value=ConcreteType:Size2D;Self=ConcreteType:Size2D;
Type analysis for Size3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Size3D;Self=ConcreteType:Size3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Size3D;Value=ConcreteType:Size3D;Self=ConcreteType:Size3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Size3D;Value=ConcreteType:Size3D;Self=ConcreteType:Size3D;
Type analysis for Fraction
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Fraction;Self=ConcreteType:Fraction;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Fraction;Value=ConcreteType:Fraction;Self=ConcreteType:Fraction;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Fraction;Value=ConcreteType:Fraction;Self=ConcreteType:Fraction;
Type analysis for Angle
  Concept=Measure Expr=Concept:Measure Subs=Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
    Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
    Function: Magnitude(Concept:Real x)
    Function: ClampOne(Concept:Real x)
    Function: GtZ(Concept:Real x)
    Function: LtZ(Concept:Real x)
    Function: GtEqZ(Concept:Real x)
    Function: LtEqZ(Concept:Real x)
    Function: IsPositive(Concept:Real x)
    Function: IsNegative(Concept:Real x)
    Function: Sign(Concept:Real x)
    Function: Abs(Concept:Real x)
      Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Function: PlusOne(Concept:Numerical x)
      Function: MinusOne(Concept:Numerical x)
      Function: FromOne(Concept:Numerical x)
        Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
          Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Angle;Value=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
          Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Angle;Value=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Angle;Numerical=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
      Function: Equals(Concept:Comparable a, Concept:Comparable b)
      Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
      Function: LessThan(Concept:Comparable a, Concept:Comparable b)
      Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: Lesser(Concept:Comparable a, Concept:Comparable b)
      Function: Greater(Concept:Comparable a, Concept:Comparable b)
      Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
      Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Function: Half(Concept:ScalarArithmetic x)
      Function: Quarter(Concept:ScalarArithmetic x)
      Function: Tenth(Concept:ScalarArithmetic x)
      Function: Twice(Concept:ScalarArithmetic x)
      Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Angle;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Angle;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Angle;ScalarArithmetic=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Angle;ScalarArithmetic=ConcreteType:Angle;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Angle;T=ConcreteType:Number;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Angle;T=TypeVariable:T;Difference=ConcreteType:Angle;T=ConcreteType:Number;Real=ConcreteType:Angle;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Angle;T=ConcreteType:Number;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Angle;T=TypeVariable:T;Difference=ConcreteType:Angle;T=ConcreteType:Number;Measure=ConcreteType:Angle;Self=ConcreteType:Angle;
  Function: CirclePoint(ConcreteType:Angle a)
  Function: Cos(ConcreteType:Angle x)
  Function: Sin(ConcreteType:Angle x)
  Function: Tan(ConcreteType:Angle x)
Type analysis for Length
  Concept=Measure Expr=Concept:Measure Subs=Measure=ConcreteType:Length;Self=ConcreteType:Length;
    Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
    Function: Magnitude(Concept:Real x)
    Function: ClampOne(Concept:Real x)
    Function: GtZ(Concept:Real x)
    Function: LtZ(Concept:Real x)
    Function: GtEqZ(Concept:Real x)
    Function: LtEqZ(Concept:Real x)
    Function: IsPositive(Concept:Real x)
    Function: IsNegative(Concept:Real x)
    Function: Sign(Concept:Real x)
    Function: Abs(Concept:Real x)
      Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Function: PlusOne(Concept:Numerical x)
      Function: MinusOne(Concept:Numerical x)
      Function: FromOne(Concept:Numerical x)
        Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
          Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Length;Value=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
          Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Length;Value=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Length;Numerical=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
      Function: Equals(Concept:Comparable a, Concept:Comparable b)
      Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
      Function: LessThan(Concept:Comparable a, Concept:Comparable b)
      Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: Lesser(Concept:Comparable a, Concept:Comparable b)
      Function: Greater(Concept:Comparable a, Concept:Comparable b)
      Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
      Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Function: Half(Concept:ScalarArithmetic x)
      Function: Quarter(Concept:ScalarArithmetic x)
      Function: Tenth(Concept:ScalarArithmetic x)
      Function: Twice(Concept:ScalarArithmetic x)
      Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Length;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Length;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Length;ScalarArithmetic=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Length;ScalarArithmetic=ConcreteType:Length;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Length;T=ConcreteType:Number;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Length;T=TypeVariable:T;Difference=ConcreteType:Length;T=ConcreteType:Number;Real=ConcreteType:Length;Measure=ConcreteType:Length;Self=ConcreteType:Length;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Length;T=ConcreteType:Number;Measure=ConcreteType:Length;Self=ConcreteType:Length;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Length;T=TypeVariable:T;Difference=ConcreteType:Length;T=ConcreteType:Number;Measure=ConcreteType:Length;Self=ConcreteType:Length;
Type analysis for Mass
  Concept=Measure Expr=Concept:Measure Subs=Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
    Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
    Function: Magnitude(Concept:Real x)
    Function: ClampOne(Concept:Real x)
    Function: GtZ(Concept:Real x)
    Function: LtZ(Concept:Real x)
    Function: GtEqZ(Concept:Real x)
    Function: LtEqZ(Concept:Real x)
    Function: IsPositive(Concept:Real x)
    Function: IsNegative(Concept:Real x)
    Function: Sign(Concept:Real x)
    Function: Abs(Concept:Real x)
      Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Function: PlusOne(Concept:Numerical x)
      Function: MinusOne(Concept:Numerical x)
      Function: FromOne(Concept:Numerical x)
        Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
          Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Mass;Value=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
          Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Mass;Value=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Mass;Numerical=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
      Function: Equals(Concept:Comparable a, Concept:Comparable b)
      Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
      Function: LessThan(Concept:Comparable a, Concept:Comparable b)
      Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: Lesser(Concept:Comparable a, Concept:Comparable b)
      Function: Greater(Concept:Comparable a, Concept:Comparable b)
      Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
      Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Function: Half(Concept:ScalarArithmetic x)
      Function: Quarter(Concept:ScalarArithmetic x)
      Function: Tenth(Concept:ScalarArithmetic x)
      Function: Twice(Concept:ScalarArithmetic x)
      Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Mass;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Mass;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Mass;ScalarArithmetic=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Mass;ScalarArithmetic=ConcreteType:Mass;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Mass;T=ConcreteType:Number;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Mass;T=TypeVariable:T;Difference=ConcreteType:Mass;T=ConcreteType:Number;Real=ConcreteType:Mass;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Mass;T=ConcreteType:Number;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Mass;T=TypeVariable:T;Difference=ConcreteType:Mass;T=ConcreteType:Number;Measure=ConcreteType:Mass;Self=ConcreteType:Mass;
Type analysis for Temperature
  Concept=Measure Expr=Concept:Measure Subs=Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
    Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
    Function: Magnitude(Concept:Real x)
    Function: ClampOne(Concept:Real x)
    Function: GtZ(Concept:Real x)
    Function: LtZ(Concept:Real x)
    Function: GtEqZ(Concept:Real x)
    Function: LtEqZ(Concept:Real x)
    Function: IsPositive(Concept:Real x)
    Function: IsNegative(Concept:Real x)
    Function: Sign(Concept:Real x)
    Function: Abs(Concept:Real x)
      Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Function: PlusOne(Concept:Numerical x)
      Function: MinusOne(Concept:Numerical x)
      Function: FromOne(Concept:Numerical x)
        Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
          Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Temperature;Value=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
          Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Temperature;Value=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Temperature;Numerical=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
      Function: Equals(Concept:Comparable a, Concept:Comparable b)
      Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
      Function: LessThan(Concept:Comparable a, Concept:Comparable b)
      Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: Lesser(Concept:Comparable a, Concept:Comparable b)
      Function: Greater(Concept:Comparable a, Concept:Comparable b)
      Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
      Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Function: Half(Concept:ScalarArithmetic x)
      Function: Quarter(Concept:ScalarArithmetic x)
      Function: Tenth(Concept:ScalarArithmetic x)
      Function: Twice(Concept:ScalarArithmetic x)
      Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Temperature;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Temperature;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Temperature;ScalarArithmetic=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Temperature;ScalarArithmetic=ConcreteType:Temperature;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Temperature;T=ConcreteType:Number;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Temperature;T=TypeVariable:T;Difference=ConcreteType:Temperature;T=ConcreteType:Number;Real=ConcreteType:Temperature;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Temperature;T=ConcreteType:Number;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Temperature;T=TypeVariable:T;Difference=ConcreteType:Temperature;T=ConcreteType:Number;Measure=ConcreteType:Temperature;Self=ConcreteType:Temperature;
Type analysis for Time
  Concept=Measure Expr=Concept:Measure Subs=Measure=ConcreteType:Time;Self=ConcreteType:Time;
    Concept=Real Expr=Concept:Real Subs=Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
    Function: Magnitude(Concept:Real x)
    Function: ClampOne(Concept:Real x)
    Function: GtZ(Concept:Real x)
    Function: LtZ(Concept:Real x)
    Function: GtEqZ(Concept:Real x)
    Function: LtEqZ(Concept:Real x)
    Function: IsPositive(Concept:Real x)
    Function: IsNegative(Concept:Real x)
    Function: Sign(Concept:Real x)
    Function: Abs(Concept:Real x)
      Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Function: PlusOne(Concept:Numerical x)
      Function: MinusOne(Concept:Numerical x)
      Function: FromOne(Concept:Numerical x)
        Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
          Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Time;Value=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
          Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Time;Value=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Time;Numerical=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Concept=Comparable Expr=Concept:Comparable Subs=Comparable=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Function: Clamp(Concept:Comparable v, Concept:Comparable a, Concept:Comparable b)
      Function: Equals(Concept:Comparable a, Concept:Comparable b)
      Function: NotEquals(Concept:Comparable a, Concept:Comparable b)
      Function: LessThan(Concept:Comparable a, Concept:Comparable b)
      Function: LessThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThan(Concept:Comparable a, Concept:Comparable b)
      Function: GreaterThanOrEquals(Concept:Comparable a, Concept:Comparable b)
      Function: Lesser(Concept:Comparable a, Concept:Comparable b)
      Function: Greater(Concept:Comparable a, Concept:Comparable b)
      Function: Between(Concept:Comparable self, Concept:Comparable min, Concept:Comparable max)
      Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Function: Half(Concept:ScalarArithmetic x)
      Function: Quarter(Concept:ScalarArithmetic x)
      Function: Tenth(Concept:ScalarArithmetic x)
      Function: Twice(Concept:ScalarArithmetic x)
      Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Time;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Time;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Time;ScalarArithmetic=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Time;ScalarArithmetic=ConcreteType:Time;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Time;T=ConcreteType:Number;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
        Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Time;T=TypeVariable:T;Difference=ConcreteType:Time;T=ConcreteType:Number;Real=ConcreteType:Time;Measure=ConcreteType:Time;Self=ConcreteType:Time;
    Concept=Difference Expr=Concept:Difference<ConcreteType:Number> Subs=Difference=ConcreteType:Time;T=ConcreteType:Number;Measure=ConcreteType:Time;Self=ConcreteType:Time;
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:Time;T=TypeVariable:T;Difference=ConcreteType:Time;T=ConcreteType:Number;Measure=ConcreteType:Time;Self=ConcreteType:Time;
Type analysis for TimeRange
  Concept=Interval Expr=Concept:Interval<ConcreteType:DateTime,ConcreteType:Time> Subs=Interval=ConcreteType:TimeRange;TSize=ConcreteType:Time;TValue=ConcreteType:DateTime;Self=ConcreteType:TimeRange;
  Function: Size(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Lerp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number amount)
  Function: Reverse(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Center(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Overlaps(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: SplitAt(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Split(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Left(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Right(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: MoveTo(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value v)
  Function: LeftHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: RightHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Recenter(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value c)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:TimeRange;Interval=ConcreteType:TimeRange;TSize=ConcreteType:Time;TValue=ConcreteType:DateTime;Self=ConcreteType:TimeRange;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:TimeRange;Interval=ConcreteType:TimeRange;TSize=ConcreteType:Time;TValue=ConcreteType:DateTime;Self=ConcreteType:TimeRange;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:TimeRange;Value=ConcreteType:TimeRange;Interval=ConcreteType:TimeRange;TSize=ConcreteType:Time;TValue=ConcreteType:DateTime;Self=ConcreteType:TimeRange;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:TimeRange;Value=ConcreteType:TimeRange;Interval=ConcreteType:TimeRange;TSize=ConcreteType:Time;TValue=ConcreteType:DateTime;Self=ConcreteType:TimeRange;
Type analysis for DateTime
  Concept=Coordinate Expr=Concept:Coordinate Subs=Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:DateTime;Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:DateTime;Value=ConcreteType:DateTime;Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:DateTime;Value=ConcreteType:DateTime;Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
    Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:DateTime;Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
    Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:DateTime;Coordinate=ConcreteType:DateTime;Self=ConcreteType:DateTime;
  Concept=Difference Expr=Concept:Difference<ConcreteType:Time> Subs=Difference=ConcreteType:DateTime;T=ConcreteType:Time;Self=ConcreteType:DateTime;
    Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:T> Subs=AdditiveArithmetic=ConcreteType:DateTime;T=TypeVariable:T;Difference=ConcreteType:DateTime;T=ConcreteType:Time;Self=ConcreteType:DateTime;
Type analysis for AnglePair
  Concept=Interval Expr=Concept:Interval<ConcreteType:Angle,ConcreteType:Angle> Subs=Interval=ConcreteType:AnglePair;TSize=ConcreteType:Angle;TValue=ConcreteType:Angle;Self=ConcreteType:AnglePair;
  Function: Size(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Lerp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number amount)
  Function: Reverse(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Center(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Overlaps(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: SplitAt(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Split(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Left(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Right(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: MoveTo(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value v)
  Function: LeftHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: RightHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Recenter(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value c)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:AnglePair;Interval=ConcreteType:AnglePair;TSize=ConcreteType:Angle;TValue=ConcreteType:Angle;Self=ConcreteType:AnglePair;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:AnglePair;Interval=ConcreteType:AnglePair;TSize=ConcreteType:Angle;TValue=ConcreteType:Angle;Self=ConcreteType:AnglePair;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:AnglePair;Value=ConcreteType:AnglePair;Interval=ConcreteType:AnglePair;TSize=ConcreteType:Angle;TValue=ConcreteType:Angle;Self=ConcreteType:AnglePair;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:AnglePair;Value=ConcreteType:AnglePair;Interval=ConcreteType:AnglePair;TSize=ConcreteType:Angle;TValue=ConcreteType:Angle;Self=ConcreteType:AnglePair;
Type analysis for NumberInterval
  Concept=Interval Expr=Concept:Interval<ConcreteType:Number,ConcreteType:Number> Subs=Interval=ConcreteType:NumberInterval;TSize=ConcreteType:Number;TValue=ConcreteType:Number;Self=ConcreteType:NumberInterval;
  Function: Size(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Lerp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number amount)
  Function: Reverse(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Center(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
  Function: Contains(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Overlaps(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: SplitAt(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Split(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Left(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: Right(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, ConcreteType:Number t)
  Function: MoveTo(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value v)
  Function: LeftHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: RightHalf(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x)
  Function: Recenter(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value c)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> y)
  Function: Clamp(Concept:Interval<TypeVariable:$Value,TypeVariable:$Size> x, TypeVariable:$Value value)
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:NumberInterval;Interval=ConcreteType:NumberInterval;TSize=ConcreteType:Number;TValue=ConcreteType:Number;Self=ConcreteType:NumberInterval;
    Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:NumberInterval;Interval=ConcreteType:NumberInterval;TSize=ConcreteType:Number;TValue=ConcreteType:Number;Self=ConcreteType:NumberInterval;
      Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:NumberInterval;Value=ConcreteType:NumberInterval;Interval=ConcreteType:NumberInterval;TSize=ConcreteType:Number;TValue=ConcreteType:Number;Self=ConcreteType:NumberInterval;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:NumberInterval;Value=ConcreteType:NumberInterval;Interval=ConcreteType:NumberInterval;TSize=ConcreteType:Number;TValue=ConcreteType:Number;Self=ConcreteType:NumberInterval;
Type analysis for Matrix2D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Matrix2D;Value=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix2D;Value=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Matrix2D;T=ConcreteType:Number;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Matrix2D;Value=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix2D;Value=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Matrix2D;Numerical=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Matrix2D;T=TypeVariable:Self;Arithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Matrix2D;T=TypeVariable:Self;Arithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Matrix2D;Arithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Matrix2D;Arithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Matrix2D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Matrix2D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Matrix2D;ScalarArithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Matrix2D;ScalarArithmetic=ConcreteType:Matrix2D;Vector=ConcreteType:Matrix2D;Self=ConcreteType:Matrix2D;
Type analysis for Matrix3D
  Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Matrix3D;Value=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix3D;Value=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Matrix3D;T=ConcreteType:Number;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Matrix3D;Value=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix3D;Value=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Matrix3D;Numerical=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Matrix3D;T=TypeVariable:Self;Arithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Matrix3D;T=TypeVariable:Self;Arithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Matrix3D;Arithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Matrix3D;Arithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Matrix3D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Matrix3D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Matrix3D;ScalarArithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Matrix3D;ScalarArithmetic=ConcreteType:Matrix3D;Vector=ConcreteType:Matrix3D;Self=ConcreteType:Matrix3D;
  Function: M11(ConcreteType:Matrix3D m)
  Function: M12(ConcreteType:Matrix3D m)
  Function: M13(ConcreteType:Matrix3D m)
  Function: M14(ConcreteType:Matrix3D m)
  Function: M21(ConcreteType:Matrix3D m)
  Function: M22(ConcreteType:Matrix3D m)
  Function: M23(ConcreteType:Matrix3D m)
  Function: M24(ConcreteType:Matrix3D m)
  Function: M31(ConcreteType:Matrix3D m)
  Function: M32(ConcreteType:Matrix3D m)
  Function: M33(ConcreteType:Matrix3D m)
  Function: M34(ConcreteType:Matrix3D m)
  Function: M41(ConcreteType:Matrix3D m)
  Function: M42(ConcreteType:Matrix3D m)
  Function: M43(ConcreteType:Matrix3D m)
  Function: M44(ConcreteType:Matrix3D m)
  Function: Multiply(ConcreteType:Matrix3D m, ConcreteType:Vector3D v)
Type analysis for UV
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:UV;Self=ConcreteType:UV;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:UV;T=ConcreteType:Number;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:UV;Value=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:UV;Value=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:UV;Numerical=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:UV;T=TypeVariable:Self;Arithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:UV;T=TypeVariable:Self;Arithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:UV;Arithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:UV;Arithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:UV;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:UV;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:UV;ScalarArithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:UV;ScalarArithmetic=ConcreteType:UV;Vector=ConcreteType:UV;Self=ConcreteType:UV;
  Function: Count(ConcreteType:UV v)
  Function: At(ConcreteType:UV v, ConcreteType:Integer n)
Type analysis for UVW
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:UVW;T=ConcreteType:Number;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:UVW;Value=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:UVW;Value=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:UVW;Numerical=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:UVW;T=TypeVariable:Self;Arithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:UVW;T=TypeVariable:Self;Arithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:UVW;Arithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:UVW;Arithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:UVW;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:UVW;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:UVW;ScalarArithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:UVW;ScalarArithmetic=ConcreteType:UVW;Vector=ConcreteType:UVW;Self=ConcreteType:UVW;
  Function: Count(ConcreteType:UVW v)
  Function: At(ConcreteType:UVW v, ConcreteType:Integer n)
Type analysis for Vector2D
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Vector2D;T=ConcreteType:Number;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Vector2D;Value=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector2D;Value=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Vector2D;Numerical=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Vector2D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Vector2D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector2D;Arithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector2D;Arithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Vector2D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Vector2D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector2D;ScalarArithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector2D;ScalarArithmetic=ConcreteType:Vector2D;Vector=ConcreteType:Vector2D;Self=ConcreteType:Vector2D;
  Function: Implicit(ConcreteType:Vector2D x)
  Function: Count(ConcreteType:Vector2D v)
  Function: At(ConcreteType:Vector2D v, ConcreteType:Integer n)
Type analysis for Vector3D
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Vector3D;T=ConcreteType:Number;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Vector3D;Value=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector3D;Value=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Vector3D;Numerical=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Vector3D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Vector3D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector3D;Arithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector3D;Arithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Vector3D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Vector3D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector3D;ScalarArithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector3D;ScalarArithmetic=ConcreteType:Vector3D;Vector=ConcreteType:Vector3D;Self=ConcreteType:Vector3D;
  Function: Implicit(ConcreteType:Vector3D x)
  Function: Count(ConcreteType:Vector3D v)
  Function: At(ConcreteType:Vector3D v, ConcreteType:Integer n)
Type analysis for Vector4D
  Concept=Vector Expr=Concept:Vector Subs=Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
  Function: Sum(Concept:Vector v)
  Function: SumSquares(Concept:Vector v)
  Function: MagnitudeSquared(Concept:Vector v)
  Function: Magnitude(Concept:Vector v)
  Function: Dot(Concept:Vector v1, Concept:Vector v2)
  Function: Normal(Concept:Vector v)
  Function: Average(Concept:Vector v)
    Concept=Array Expr=Concept:Array<ConcreteType:Number> Subs=Array=ConcreteType:Vector4D;T=ConcreteType:Number;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Function: Reduce(Concept:Array<TypeVariable:$T> xs, TypeVariable:$U init, ConcreteType:Function2<TypeVariable:$U,TypeVariable:$T,TypeVariable:$U> f)
    Function: Map(Concept:Array<TypeVariable:$T> xs, ConcreteType:Function1<TypeVariable:$T,TypeVariable:$U> f)
    Concept=Numerical Expr=Concept:Numerical Subs=Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Function: PlusOne(Concept:Numerical x)
    Function: MinusOne(Concept:Numerical x)
    Function: FromOne(Concept:Numerical x)
      Concept=Value Expr=Concept:Value Subs=Value=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
        Concept=Any Expr=Concept:Any Subs=Any=ConcreteType:Vector4D;Value=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
        Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector4D;Value=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=Betweenable Expr=Concept:Betweenable Subs=Betweenable=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=Equatable Expr=Concept:Equatable Subs=Equatable=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=Interpolatable Expr=Concept:Interpolatable Subs=Interpolatable=ConcreteType:Vector4D;Numerical=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Concept=Arithmetic Expr=Concept:Arithmetic Subs=Arithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Function: Pow2(Concept:Arithmetic x)
    Function: Pow3(Concept:Arithmetic x)
    Function: Pow4(Concept:Arithmetic x)
    Function: Pow5(Concept:Arithmetic x)
    Function: Square(Concept:Arithmetic x)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<TypeVariable:Self> Subs=AdditiveArithmetic=ConcreteType:Vector4D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<TypeVariable:Self> Subs=MultiplicativeArithmetic=ConcreteType:Vector4D;T=TypeVariable:Self;Arithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector4D;Arithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector4D;Arithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Concept=ScalarArithmetic Expr=Concept:ScalarArithmetic Subs=ScalarArithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
    Function: Half(Concept:ScalarArithmetic x)
    Function: Quarter(Concept:ScalarArithmetic x)
    Function: Tenth(Concept:ScalarArithmetic x)
    Function: Twice(Concept:ScalarArithmetic x)
    Function: Lerp(Concept:ScalarArithmetic a, Concept:ScalarArithmetic b, ConcreteType:Number t)
      Concept=AdditiveArithmetic Expr=Concept:AdditiveArithmetic<ConcreteType:Number> Subs=AdditiveArithmetic=ConcreteType:Vector4D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=MultiplicativeArithmetic Expr=Concept:MultiplicativeArithmetic<ConcreteType:Number> Subs=MultiplicativeArithmetic=ConcreteType:Vector4D;T=ConcreteType:Number;ScalarArithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=AdditiveInverse Expr=Concept:AdditiveInverse Subs=AdditiveInverse=ConcreteType:Vector4D;ScalarArithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
      Concept=MultiplicativeInverse Expr=Concept:MultiplicativeInverse Subs=MultiplicativeInverse=ConcreteType:Vector4D;ScalarArithmetic=ConcreteType:Vector4D;Vector=ConcreteType:Vector4D;Self=ConcreteType:Vector4D;
  Function: Implicit(ConcreteType:Vector4D x)
  Function: Count(ConcreteType:Vector4D v)
  Function: At(ConcreteType:Vector4D v, ConcreteType:Integer n)
