using System;

namespace PlatoParser
{
    public class Keywords
    {
        // https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/
        public static string[] CSharpKeywords = @"
abstract
as
base
bool
break
byte
case
catch
char
checked
class
const
continue
decimal
default
delegate
do
double
else
enum
event
explicit
extern
false
finally
fixed
float
for
foreach
goto
if
implicit
in
int
interface
internal
is
lock
long
namespace
new
null
object
operator
out
override
params
private
protected
public
readonly
ref
return
sbyte
sealed
short
sizeof
stackalloc
static
string
struct
switch
this
throw
true
try
typeof
uint
ulong
unchecked
unsafe
ushort
using
virtual
void
volatile
while".Split('\n'); // TODO: remove empty entries and trim them 

        // https://www.w3schools.com/js/js_reserved.asp
        public static string[] JavaScriptKeywords = @"
abstract
arguments
await
boolean
break
byte
case
catch
char
class
const
continue
debugger
default
delete
do
double
else
enum
eval
export
extends
false
final
finally
float
for
function
goto
if
implements
import
in
instanceof
int
interface
let
long
native
new
null
package
private
protected
public
return
short
static
super
switch
synchronized
this
throw
throws
transient
true
try
typeof
var
void
volatile
while
with
yield".Split('\n'); // TODO: remove empyy entires and trim them 
    }
}
